{"version":3,"sources":["../../src/index.tsx","App.js","index.js"],"names":["df","useSlide","animationTime","defaultShow","timeoutShowRef","React.useRef","styles","setStyles","callback","ref","setRef","React.useCallback","node","current","optionsRef","elem","style","display","transition","height","scrollHeight","setTimeout","Example","title","description","children","Card","Body","Title","Text","UseHoverExample","buttonRef","React","useRef","hovered","setHovered","handleMouseOver","handleMouseOut","React.useEffect","addEventListener","removeEventListener","useHover","UseWidthExample","theRef","width","userWidth","_","value","isAuto","Number","isInteger","setWidth","visibility","scrollWidth","useWidth","border","UseSlideExample","show","setShow","onClick","position","UseFlipExample","auto","setCurrent","checkPosition","y","parentElement","getBoundingClientRect","top","screenHeight","window","innerHeight","transform","bottom","transformOrigin","flipTop","document","useFlip","margin","App","useState","page","setPage","Container","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.88761a78.chunk.js","sourcesContent":["import * as React from 'react';\n\nconst df = () => { };\n\nexport function useWatchedRef(callback: (node: HTMLElement) => any) : [React.MutableRefObject<HTMLElement | undefined>, ((node: HTMLElement) => void)] {\n  const ref = React.useRef<HTMLElement>()\n  const setRef = React.useCallback((node : HTMLElement) => {ref.current = node; callback(node);}, []);\n  return [ref, setRef]\n}\n\nexport function useHover(ref: React.MutableRefObject<HTMLElement>) {\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  const handleMouseOver = () => setHovered(true);\n  const handleMouseOut = () => setHovered(false);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener('mouseover', handleMouseOver);\n      node.addEventListener('mouseout', handleMouseOut);\n      return () => {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    }\n    return df;\n  }, [ref.current]);\n\n  return hovered;\n}\n\ninterface useWidthReducerParams {\n  width: number | null,\n  isAuto: boolean\n}\n\nexport function useWidth(optionsRef: { current: HTMLElement }, userWidth: null | string | number) {\n  const initialArgs: useWidthReducerParams = { width: 50, isAuto: false }\n  const reduce = (_: any, value: null | string | number): useWidthReducerParams => {\n    if (value === 'auto') {\n      return { width: null, isAuto: true }\n    }\n    if (Number.isInteger(value as number)) {\n      return { width: value as number, isAuto: false }\n    }\n    return { width: null, isAuto: false }\n  };\n  const [{ width, isAuto }, setWidth] = React.useReducer(reduce, initialArgs)\n\n  React.useEffect(() => {\n    setWidth(userWidth)\n  }, [userWidth])\n\n  React.useEffect(() => {\n    if (optionsRef.current == null)\n      return\n    if (!isAuto)\n      return\n\n    const elem = optionsRef.current\n\n    if (elem.style.display === 'none') {\n      elem.style.visibility = 'hidden'\n      elem.style.display = 'inline-block'\n      setTimeout(() => {\n        setWidth(elem.scrollWidth)\n        elem.style.display = 'none'\n        elem.style.visibility = 'visible'\n      })\n    } else {\n      setWidth(elem.scrollWidth)\n    }\n  }, [optionsRef.current])\n\n  return width\n}\n\n\nexport function useSlide(animationTime: number, defaultShow: boolean) {\n  const timeoutShowRef = React.useRef<NodeJS.Timeout>()\n  const [styles, setStyles] = React.useState({})\n  const [optionsRef, setRef] = useWatchedRef((node) => {\n    if(node == null)  return {}\n    if (defaultShow === true) {\n      return setStyles({\n        height: node.scrollHeight\n      })\n    } else {\n      return setStyles({\n        display: 'none',\n        height: 0,\n        overflowY: 'hidden'\n      })\n    }\n  })\n\n  const slideDown = (elem: HTMLElement) => {\n    elem.style.display = 'block'\n    elem.style.transition = `height, ${animationTime}s linear`\n    elem.style.height = `${elem.scrollHeight}px`;\n    timeoutShowRef.current = setTimeout(() => {\n      elem.style[\"overflow-y\"] = \"auto\";\n    }, animationTime * 1000.0)\n  }\n\n  const slideUp = (elem: HTMLElement) => {\n    elem.style[\"overflow-y\"] = \"hidden\";\n    elem.style.transition = `height, ${animationTime}s linear`\n    elem.style.height = `0px`;\n    timeoutShowRef.current = setTimeout(() => {\n      elem.style.display = \"none\";\n    }, animationTime * 1000.0)\n  }\n\n  const [show, setShow] = React.useReducer((_: boolean, value: boolean): boolean => {\n    clearTimeout(timeoutShowRef.current as NodeJS.Timeout);\n    if (value === true) {\n      slideDown(optionsRef.current as HTMLElement);\n    }\n    else {\n      slideUp(optionsRef.current as HTMLElement)\n    }\n    return value\n  }, defaultShow)\n\n  return [show, setShow, styles, setRef]\n}\n\n\nexport function useFlip(optionsRef : React.MutableRefObject<HTMLElement>, show : boolean, position : string = 'bottom', auto : boolean = true) {\n\n  const flipTop = (elem : HTMLElement) => {\n    elem.style.transformOrigin = 'bottom'\n    elem.style.top = 'unset'\n    elem.style.bottom = '100%'\n  }\n\n  const flipBottom = (elem : HTMLElement) => {\n    elem.style.transform = ''\n    elem.style.bottom = 'unset'\n    elem.style.top = 'unset'\n  }\n\n  const [current, setCurrent] = React.useState(position)\n  React.useEffect(() => setCurrent(position), [position])\n\n  const checkPosition = () => {\n    if (optionsRef.current == null)\n      return\n\n    if (show !== true)\n      return\n\n    const y = optionsRef.current.parentElement!.getBoundingClientRect().top\n    const screenHeight = window.innerHeight\n    const height = optionsRef.current.scrollHeight\n\n    if (y + height + 100 > screenHeight && y - height > 0) {\n      if (current != 'top')\n        setCurrent('top')\n    } else if (y + height - 100 < screenHeight) {\n      if (current != 'bottom')\n        setCurrent('bottom')\n    }\n  }\n\n  React.useEffect(() => {\n    if (optionsRef.current == null)\n      return\n    if (show !== true)\n      return\n\n    switch (current) {\n      case 'bottom': return flipBottom(optionsRef.current);\n      case 'top': return flipTop(optionsRef.current)\n    }\n  }, [optionsRef.current, show, current])\n\n  React.useEffect(() => {\n    if (optionsRef.current == null)\n      return\n    if (auto !== true)\n      return\n\n    checkPosition()\n    document.addEventListener('scroll', checkPosition)\n    return () => {\n      document.removeEventListener('scroll', checkPosition)\n    }\n  }, [optionsRef.current, auto, show, current])\n}\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Container } from 'react-bootstrap'\n\nimport { useHover, useWidth, useSlide, useFlip } from 'react-my-hooks'\n\nexport function Example({ title, description, children }) {\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Card.Text>{description}</Card.Text>\n        {children}\n      </Card.Body>\n    </Card>\n  )\n}\n\nfunction UseHoverExample() {\n  const buttonRef = React.useRef()\n  const hovered = useHover(buttonRef)\n  return (\n    <Example title=\"useHover\">\n      <button ref={buttonRef}>\n        {hovered ? \"yes\" : \"no\"}\n      </button>\n    </Example>\n\n  )\n}\n\nfunction UseWidthExample() {\n  const theRef = React.useRef()\n  const width = useWidth(theRef, \"auto\")\n  return (\n    <Example title=\"useWidth\">\n      <span style={{ width, display: 'inline-block', border: '1px solid black' }}>\n        a\n      </span>\n      <br />\n      <span ref={theRef} style={{ border: '1px solid black' }}>\n        Hello I Have long width\n      </span>\n    </Example>\n  )\n}\n\nfunction UseSlideExample() {\n  const [show, setShow, styles, setRef] = useSlide(0.5, false)\n\n  return (\n    <Example title=\"useSlide\">\n      <button onClick={() => setShow(!show)}>\n        Show\n      </button>\n      <div ref={setRef} style={{ ...styles, border: '1px solid black', position: 'absolute' }}>\n        <ul>\n          <li>One</li>\n          <li>Three</li>\n          <li>Four</li>\n          <li>Five</li>\n        </ul>\n      </div>\n    </Example>\n  )\n}\n\nfunction UseFlipExample() {\n  const theRef = React.useRef()\n  useFlip(theRef, true)\n\n  return (\n    <Example title=\"useFlip\">\n      <div style={{ border: '1px solid black', margin: '80vh auto', position: 'relative' }}>\n        Hello\n      <div ref={theRef} style={{ border: '1px solid black', position: 'absolute' }}>\n          <ul>\n            <li>One</li>\n            <li>Three</li>\n            <li>Four</li>\n            <li>Five</li>\n          </ul>\n        </div>\n      </div>\n    </Example>\n  )\n}\n\n\nconst App = () => {\n  const [page, setPage] = React.useState(\"useHover\")\n  return (\n    <Container>\n      <Card>\n        <Card.Body>\n          <button onClick={() => setPage(\"useHover\")}>\n            useHover\n          </button>\n          <button onClick={() => setPage(\"useWidth\")}>\n            useWidth\n          </button>\n          <button onClick={() => setPage(\"useSlide\")}>\n            useSlide\n          </button>\n          <button onClick={() => setPage(\"useFlip\")}>\n            useFlip\n          </button>\n        </Card.Body>\n\n      </Card>\n      {page === \"useHover\" && <UseHoverExample />}\n      {page === \"useWidth\" && <UseWidthExample />}\n      {page === \"useSlide\" && <UseSlideExample />}\n      {page === \"useFlip\" && <UseFlipExample />}\n    </Container>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}